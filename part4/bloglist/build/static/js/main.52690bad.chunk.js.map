{"version":3,"sources":["components/Blog.js","components/LoginForm.js","components/BlogForm.js","components/Togglable.js","components/Notification.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","handleIncreaseLike","handleDeletePost","useState","visible","setVisible","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","toggleVisibility","hideWhenVisible","display","showWhenVisible","className","style","Object","assign","title","onClick","author","url","likes","id","undefined","user","name","window","confirm","LoginForm","handleLogin","username","setUsername","password","setPassword","onSubmit","event","preventDefault","type","value","onChange","target","BlogForm","handleCreateBlog","setTitle","setAuthor","setUrl","Togglable","React","forwardRef","props","ref","useImperativeHandle","buttonLabel","children","displayName","Notification","error","baseUrl","token","getAll","a","axios","get","request","data","create","newObject","config","headers","Authorization","post","response","update","put","deletePost","delete","setToken","newToken","login","credentials","App","blogs","setBlogs","setUser","errorMessage","setErrorMessage","blogFormRef","useRef","useEffect","blogService","then","loggedUser","localStorage","getItem","authentication","JSON","parse","end","Date","now","loginService","start","setItem","stringify","setTimeout","current","blogObj","blogTitle","console","log","clear","sort","b","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52690bad.chunk.js","sourcesContent":["import React, { useState } from 'react'\nconst Blog = ({ blog, handleIncreaseLike, handleDeletePost }) => {\n  const [visible, setVisible] = useState(false)\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5,\n  }\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const updateLike = () => {\n    handleIncreaseLike(blog.id, { title: blog.title, likes: blog.likes + 1 })\n  }\n\n  const deletePost = () => {\n    if (\n      window.confirm(\n        `are you sure you want to remove ${blog.title} by ${blog.author}`\n      )\n    )\n      handleDeletePost(blog.id, blog.title)\n  }\n\n  return (\n    <div>\n      <div className='visibleContent' style={Object.assign({}, blogStyle, hideWhenVisible)}>\n        <span>title: {blog.title}</span>\n        <button className='openButton' onClick={toggleVisibility}>Open</button>\n        <p>author: {blog.author}</p>\n      </div>\n      <div className='invisibleContent' style={Object.assign({}, blogStyle, showWhenVisible)}>\n        <span>title: {blog.title}</span>\n        <button onClick={toggleVisibility}>cancel</button>\n        <p>author: {blog.author}</p>\n        <p>url: {blog.url}</p>\n        <span>likes: {blog.likes}</span>\n        <button className='likeButton' onClick={updateLike}>Like Post</button>\n        <p>Owner: {blog.user.name === undefined ? 'No owner' : blog.user.name }</p>\n        <button onClick={deletePost}>Delete Post</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Blog\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nconst LoginForm = ({ handleLogin }) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLoginSubmit = (event) => {\n    event.preventDefault()\n    handleLogin({\n      username: username,\n      password: password,\n    })\n  }\n\n  return (\n    <form onSubmit={handleLoginSubmit}>\n      <div>\n        Username:\n        <input\n          type=\"text\"\n          id=\"username\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        Password:\n        <input\n          type=\"text\"\n          id=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button id='login-button' type=\"submit\">login</button>\n    </form>\n  )\n}\n\nLoginForm.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n}\n\nexport default LoginForm\n","import React, { useState } from 'react'\nconst BlogForm = ({ handleCreateBlog }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const handleBlogSubmit = (event) => {\n    event.preventDefault()\n    handleCreateBlog({\n      title: title,\n      author: author,\n      url: url,\n    })\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleBlogSubmit}>\n        <div>\n          Title:\n          <input\n            type=\"text\"\n            id='title'\n            value={title}\n            name=\"title\"\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n          Author:\n          <input\n            id='author'\n            type=\"text\"\n            value={author}\n            name=\"author\"\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n        </div>\n        <div>\n          Url:\n          <input\n            id='url'\n            type=\"text\"\n            value={url}\n            name=\"url\"\n            onChange={({ target }) => setUrl(target.value)}\n          />\n        </div>\n        <button type=\"submit\">create</button>\n      </form>\n    </div>\n  )\n}\n\nexport default BlogForm\n","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility,\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n}\nTogglable.displayName = 'Togglable'\n\nexport default Togglable\n","import React from 'react'\n\nconst Notification = ({ error }) => {\n  return (\n    <div className='error'>\n      <p>{error}</p>\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/blog'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const request = await axios.get(baseUrl)\n  return request.data\n}\n\nconst create = async (newObject) => {\n  const config = { headers: { Authorization: token } }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const config = { headers: { Authorization: token } }\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config)\n  return response.data\n}\n\nconst deletePost = async (id) => {\n  const config = { headers: { Authorization: token } }\n  await axios.delete(`${baseUrl}/${id}`, config)\n}\n\nexport default { setToken, getAll, create, update, deletePost }\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const request = await axios.post(baseUrl, credentials)\n  return request.data\n}\n\nexport default { login }\n","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport Togglable from './components/Togglable'\nimport Notification from './components/Notification'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [errorMessage, setErrorMessage] = useState('')\n  const blogFormRef = useRef()\n\n  useEffect(() => {\n    blogService.getAll().then((blog) => setBlogs(blog))\n  }, [])\n\n  useEffect(() => {\n    const loggedUser = window.localStorage.getItem('loggedUser')\n    const authentication = JSON.parse(\n      window.localStorage.getItem('authentication')\n    )\n    if (loggedUser && authentication.end >= Date.now()) {\n      const user = JSON.parse(loggedUser)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogout = () => {\n    window.localStorage.clear()\n    blogService.setToken(null)\n    setUser(null)\n  }\n\n  const handleLogin = async ({ username, password }) => {\n    try {\n      const user = await loginService.login({ username, password })\n      const authentication = {\n        start: Date.now(),\n        end: Date.now() + 60 * 60 * 1000,\n      }\n      setUser(user)\n      blogService.setToken(user.token)\n      window.localStorage.setItem('loggedUser', JSON.stringify(user))\n      window.localStorage.setItem(\n        'authentication',\n        JSON.stringify(authentication)\n      )\n    } catch (err) {\n      setErrorMessage('Wrong Credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleCreateBlog = async ({ title, author, url }) => {\n    blogFormRef.current.toggleVisibility()\n    try {\n      const blog = await blogService.create({\n        title: title,\n        author: author,\n        url: url,\n      })\n      blogService.getAll().then((blog) => setBlogs(blog))\n      setErrorMessage(`${blog.title} created with success`)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    } catch (err) {\n      setErrorMessage('Invalid parameters for creating a blog')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleIncreaseLike = async (id, blogObj) => {\n    try {\n      await blogService.update(id, blogObj)\n      blogService.getAll().then((blog) => setBlogs(blog))\n      setErrorMessage(`${blogObj.title} likes updated to ${blogObj.likes}`)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    } catch (err) {\n      setErrorMessage('Can\\'t update this post')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const handleDeletePost = async (id, blogTitle) => {\n    try {\n      await blogService.deletePost(id)\n      const blog = await blogService.getAll()\n      setBlogs(blog)\n      setErrorMessage(`${blogTitle} deleted by ${user.name}`)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    } catch (err) {\n      console.log(err)\n      setErrorMessage('You can\\'t delete this post')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const loginform = () => (\n    <Togglable buttonLabel=\"login\">\n      <LoginForm handleLogin={handleLogin} />\n    </Togglable>\n  )\n\n  const blogform = () => (\n    <Togglable buttonLabel=\"Add new blog\" ref={blogFormRef}>\n      <BlogForm handleCreateBlog={handleCreateBlog} />\n    </Togglable>\n  )\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <Notification error={errorMessage}/>\n\n      {user === null ? (\n        <div>\n          <h2>Log in to application</h2>\n          <Notification error={errorMessage}/>\n          {loginform()}\n        </div>\n      ) : (\n        <div>\n          {user.name} logged in\n          <button onClick={handleLogout}>logout</button>\n          {blogform()}\n        </div>\n      )}\n\n      {blogs\n        .sort((a, b) => (a.likes > b.likes ? -1 : 1))\n        .map((blog) => (\n          <Blog\n            key={blog.id}\n            blog={blog}\n            handleIncreaseLike={handleIncreaseLike}\n            handleDeletePost={handleDeletePost}\n          />\n        ))}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}